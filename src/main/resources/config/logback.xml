<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">

    <!-- 定义日志文件 输入位置   /var/log/betdice G:/log/betdice -->
    <property name="LOG_HOME" value="G:/log/betdice"/>

    <property name="LOG_PATH" value="${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}" />

    <property name="LOG_CHARSET" value="utf-8"/>

    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"/>

    <property name="MAX_HISTORY" value="7"/>

    <property name="MAX_FILE_SIZE" value="10MB"/>

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />

    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />

    <!-- Console 输出设置 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!--encoder 默认配置为PatternLayoutEncoder -->
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf-8</charset>
        </encoder>
        <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>info</level>
        </filter>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <FileNamePattern>${LOG_PATH}/betdice-%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--日志文件保留天数 -->
            <MaxHistory>${MAX_HISTORY}</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <!--日志文件最大的大小 -->
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>${MAX_FILE_SIZE}</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 异常日志输出 -->
    <appender name="errorFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/error-%d{yyyy-MM-dd}.log</fileNamePattern>
            <MaxHistory>${MAX_HISTORY}</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <!--日志文件最大的大小 -->
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>${MAX_FILE_SIZE}</MaxFileSize>
        </triggeringPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印错误日志 -->
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- controller.admin层日志输出 -->
    <appender name="adminControllerFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/admin_controller-%d{yyyy-MM-dd}.log</fileNamePattern>
            <MaxHistory>${MAX_HISTORY}</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>${LOG_CHARSET}</charset>
        </encoder>
        <!--日志文件最大的大小 -->
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>${MAX_FILE_SIZE}</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- controller.api层日志输出 -->
    <appender name="apiControllerFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/api_controller-%d{yyyy-MM-dd}.log</fileNamePattern>
            <MaxHistory>${MAX_HISTORY}</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>${LOG_CHARSET}</charset>
        </encoder>
        <!--日志文件最大的大小 -->
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>${MAX_FILE_SIZE}</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- service层日志输出 -->
    <appender name="serviceFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/service-%d{yyyy-MM-dd}.log</fileNamePattern>
            <MaxHistory>${MAX_HISTORY}</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>${LOG_CHARSET}</charset>
        </encoder>
        <!--日志文件最大的大小 -->
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>${MAX_FILE_SIZE}</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- mapper层日志输出 -->
    <appender name="mapperFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/mapper-%d{yyyy-MM-dd}.log</fileNamePattern>
            <MaxHistory>${MAX_HISTORY}</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>${LOG_CHARSET}</charset>
        </encoder>
        <!--日志文件最大的大小 -->
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>${MAX_FILE_SIZE}</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- component层日志输出 -->
    <appender name="componentFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/component-%d{yyyy-MM-dd}.log</fileNamePattern>
            <MaxHistory>${MAX_HISTORY}</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>${LOG_CHARSET}</charset>
        </encoder>
        <!--日志文件最大的大小 -->
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>${MAX_FILE_SIZE}</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- task层日志输出 -->
    <appender name="taskFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/task-%d{yyyy-MM-dd}.log</fileNamePattern>
            <MaxHistory>${MAX_HISTORY}</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>${LOG_CHARSET}</charset>
        </encoder>
        <!--日志文件最大的大小 -->
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>${MAX_FILE_SIZE}</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 生产环境下，将此级别配置为适合的级别，以免日志文件太多或影响程序性能 -->
    <root level="info">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="FILE" />
    </root>

    <!-- controller.admin Logger -->
    <logger name="com.aidilude.betdice.controller.admin" level="info" additivity="false">
        <appender-ref ref="adminControllerFile" />
        <appender-ref ref="errorFile" />
    </logger>

    <!-- controller.api Logger -->
    <logger name="com.aidilude.betdice.controller.api" level="info" additivity="false">
        <appender-ref ref="apiControllerFile" />
        <appender-ref ref="errorFile" />
    </logger>

    <!-- service Logger -->
    <logger name="com.aidilude.betdice.service" level="info" additivity="false">
        <appender-ref ref="serviceFile" />
        <appender-ref ref="errorFile" />
    </logger>

    <!-- mapper Logger -->
    <logger name="com.aidilude.betdice.mapper" level="info" additivity="false">
        <appender-ref ref="mapperFile" />
        <appender-ref ref="errorFile" />
    </logger>

    <!-- component Logger -->
    <logger name="com.aidilude.betdice.component" level="info" additivity="false">
        <appender-ref ref="componentFile" />
        <appender-ref ref="errorFile" />
    </logger>

    <!-- task Logger -->
    <logger name="com.aidilude.betdice.task" level="info" additivity="false">
        <appender-ref ref="taskFile" />
        <appender-ref ref="errorFile" />
    </logger>

    <!-- SQL输出 -->
    <logger name="java.sql.Connection" level="info">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="mapperFile" />
    </logger>
    <logger name="java.sql.Statement" level="info">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="mapperFile" />
    </logger>
    <logger name="java.sql.PreparedStatement" level="info" >
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="mapperFile" />
    </logger>

</configuration>